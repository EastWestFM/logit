# Built-in language packs: en, de, pl
# Put your own translations in "/lang" directory
# Filename format: messages_<locale>.properties
locale: en

log-to-file:
  enabled: false
  filename: debug.log

force-login:
  global: true
  in-worlds: []
  
  # Already includes /login, /register and their aliases
  allowed-commands: []
  
  # Number of seconds during which the player has to log in until they will be kicked
  # -1 means no timeout
  timeout: -1
  
  # Events that should be cancelled when the player is logged out
  # I hope their names are self-explanatory enough
  prevent:
    move: true
    toggle-sneak: true
    block-place: true
    block-break: true
    damage-in: true
    damage-out: true
    regain-health: true
    food-level-change: true
    entity-target: true
    chat: true
    command-preprocess: true
    pickup-item: true
    drop-item: true
    interact: true
    interact-entity: true
    inventory-click: true
    air-depletion: true
  
  # Experimental! (contains bugs;
  # one confirmed: written books become raw porkchops)
  hide-inventory: false

# Measured in seconds 0 means that session will end
# as soon as the player quits
session-lifetime: 0

# If true, join messages will also show name of the world
# where the player spawned
# If Multiverse-Core is also running, it will show display name
# that was set using "/mvm set alias <World_Alias>"
reveal-spawn-world: true

username:
  # The default regular expression allows:
  #  * big/small latin letters,
  #  * digits,
  #  * underscore
  regex: '[A-Za-z0-9_]+'
  
  # Rather invariable
  # These are the restrictions set by Mojang
  min-length: 2
  max-length: 16
  
  prohibited-usernames: []

password:
  min-length: 3
  
  # I would not recommend setting it to higher values.
  # 40 is what I've deduced to be the safe
  # password length that fits into the chat.
  max-length: 40
  
  # Acceptable values: plain, md2, md5, sha-1, sha-256, sha-384, sha-512,
  # whirlpool, bcrypt
  # All other will cause LogIt to fail to start
  hashing-algorithm: sha-256
  
  # Tells LogIt whether salt will be used to hash passwords
  # Leave set to "true" if you don't know what is it
  use-salt: true
  
  # The global password should be changed using "/logit globalpass set <password>"
  global-password:
    hash: ''
    salt: ''

crowd-control:
  # How many login fails lead to a kick/ban?
  # -1 means "never kick/ban"
  login-fails-to-kick: -1
  login-fails-to-ban: -1
  
  # When true, it will cause unregistered players to fail to join
  kick-unregistered: false
  
  # Number of days of absence after which a player will be unregisted
  # Values below 0 mean that accounts will never be deleted
  days-of-absence-to-unregister: -1
  
  accounts-per-ip:
    amount: 3
    unrestricted-ips: []
  
  preserve-slots:
    # How many slots to preserve
    amount: 0
    
    # Players for which the slots are preserved
    players: []

password-recovery:
  # Tells whether "/recoverpass" command should be enabled.
  enabled: false
  
  subject: Password recovery for %player%
  body-template: mail/password-recovery.html
  
  # If set to true, e-mail messages will be sent as HTML.
  # Set to false to send plain text (HTML tags will be visible).
  html-enabled: true
  
  password-length: 6
  
  # Characters that are used to generate password.
  password-combination: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ

# Just google "<Your E-Mail Provider> smtp settings".
mail:
  email-address: ''
  smtp-host: ''
  smtp-port: 465
  smtp-user: ''
  smtp-password: ''

# Waiting room is a place where players spawn in order to log in.
# After they log in, they are teleported to where they've been lastly.
waiting-room:
  enabled: false
  location:
    world: world
    position:
      ==: Vector
      x: 0.0
      y: 0.0
      z: 0.0
    yaw: 0.0
    pitch: 0.0
  
  # Where does the player go after they register?
  # Works only if waiting room is enabled.
  newbie-teleport:
    enabled: false
    location:
      world: world
      position:
        ==: Vector
        x: 0.0
        y: 0.0
        z: 0.0
      yaw: 0.0
      pitch: 0.0

# Group switching requires Vault
groups:
  enabled: false
  registered: Registered
  unregistered: Unregistered
  logged-in: LoggedIn
  logged-out: LoggedOut

# Integration allows to improve LogIt operation
# on a database connected to a website (e.g. forum).
# Valid values: "none", "phpbb2"
integration: none

storage:
  # This database stores player accounts
  accounts:
    db-type: sqlite
    
    sqlite:
      filename: accounts.db
    
    h2:
      # H2 database automatically appends file extension
      filename: accounts
    
    mysql:
      host: jdbc:mysql://localhost:3306/
      user: root
      password: ''
      database: ''
    
    # In case of CSV database it is the database path
    table: logit
    
    columns:
      username: username
      salt: salt
      password: password
      ip: ip
      email: email
      last_active: last_active
      location_world: location_world
      location_x: location_x
      location_y: location_y
      location_z: location_z
      location_yaw: location_yaw
      location_pitch: location_pitch
      in_wr: in_wr
  
  # This SQLite database stores player inventories
  # In case your server crashes, it will restore inventories
  # belonging to players who were logged out at that time
  # It is ignored if "force-login.hide-inventories" is set to false
  inventories:
    filename: inventories.db
  
  # This database is a temporary SQLite database used to
  # store sessions when LogIt is restarting
  sessions:
    filename: sessions.db

backup:
  # Relative to LogIt data folder
  path: backup
  
  # Backup filename format
  # How to format this property:
  #   http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html
  filename-format: yyyy-MM-dd_HH-mm-ss'.db'
  
  schedule:
    # Whether sheduled backing up is enabled
    # "/logit backup force" will still work
    enabled: false
    
    # Interval between backups in minutes
    interval: 120
